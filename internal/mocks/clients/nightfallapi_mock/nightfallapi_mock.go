// Code generated by MockGen. DO NOT EDIT.
// Source: ../nightfallintf/nightfall_api.go

// Package nightfallapi_mock is a generated GoMock package.
package nightfallapi_mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	nightfallintf "github.com/nightfallai/nightfall_cli/internal/interfaces/nightfallintf"
	openapi "github.com/nightfallai/nightfall_go_client/generated"
	http "net/http"
	reflect "reflect"
)

// NightfallAPI is a mock of NightfallAPI interface
type NightfallAPI struct {
	ctrl     *gomock.Controller
	recorder *NightfallAPIMockRecorder
}

// NightfallAPIMockRecorder is the mock recorder for NightfallAPI
type NightfallAPIMockRecorder struct {
	mock *NightfallAPI
}

// NewNightfallAPI creates a new mock instance
func NewNightfallAPI(ctrl *gomock.Controller) *NightfallAPI {
	mock := &NightfallAPI{ctrl: ctrl}
	mock.recorder = &NightfallAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *NightfallAPI) EXPECT() *NightfallAPIMockRecorder {
	return m.recorder
}

// ScanAPI mocks base method
func (m *NightfallAPI) ScanAPI() nightfallintf.NightfallScanAPI {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScanAPI")
	ret0, _ := ret[0].(nightfallintf.NightfallScanAPI)
	return ret0
}

// ScanAPI indicates an expected call of ScanAPI
func (mr *NightfallAPIMockRecorder) ScanAPI() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScanAPI", reflect.TypeOf((*NightfallAPI)(nil).ScanAPI))
}

// ScanPayload mocks base method
func (m *NightfallAPI) ScanPayload(ctx context.Context, scanReq openapi.ScanRequest) ([][]openapi.ScanResponse, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScanPayload", ctx, scanReq)
	ret0, _ := ret[0].([][]openapi.ScanResponse)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ScanPayload indicates an expected call of ScanPayload
func (mr *NightfallAPIMockRecorder) ScanPayload(ctx, scanReq interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScanPayload", reflect.TypeOf((*NightfallAPI)(nil).ScanPayload), ctx, scanReq)
}
